#!/usr/bin/env ruby
require 'rubygems'
require 'commander/import'
require 'simple-git-pair'

program :name,           "\n  Usage:\n    #{SimpleGitPair::BINARY_NAME} <initials>"
program :version,        SimpleGitPair::VERSION
program :description,    SimpleGitPair::SUMMARY
program :int_message,    "Good bye"
program :help,           'Example', 'git pair nt ae       Changes your git user.name to "Nikola Tesla & Alfred Einstein"'
program :help_formatter, :compact

default_command :change
command :change do |c|
  c.description = "Change your git user.name"
  c.syntax = "#{SimpleGitPair::BINARY_NAME} change <initials>"
  c.example 'Nikola Tesla & Alfred Einstein', "#{SimpleGitPair::BINARY_NAME} change nt ae"
  c.action do |args, options|
    if args.empty?
      commands['help'].run
    else
      SimpleGitPair::Command::Change.new(args).run!
    end
  end
end

command :init do |c|
  c.description = "Create a sample config file"
  c.syntax = "#{SimpleGitPair::BINARY_NAME} init"
  c.example "Creates .git_pairs in your home directory", "#{SimpleGitPair::BINARY_NAME} init"
  c.action do |args, options|
    SimpleGitPair::Command::Init.new.run!
  end
end

command :list do |c|
  c.description = "List available pairs"
  c.syntax = SimpleGitPair::Command::List::USAGE
  c.example "Lists all available pairs", "#{SimpleGitPair::BINARY_NAME} list"
  c.action do |args, options|
    SimpleGitPair::Command::List.new.run!
  end
end

command :add do |c|
  c.description = "Add new pair to a list"
  c.syntax = SimpleGitPair::Command::Add::USAGE
  c.example "Adds New Guy to pairs list", "#{SimpleGitPair::BINARY_NAME} add ng New Guy"
  c.action do |args, options|
    SimpleGitPair::Command::Add.new(args).run!
  end
end

command :delete do |c|
  c.description = "Delete existing pair"
  c.syntax = SimpleGitPair::Command::Delete::USAGE
  c.example "Deletes og from pairs list", "#{SimpleGitPair::BINARY_NAME} delete og"
  c.action do |args, options|
    SimpleGitPair::Command::Delete.new(args).run!
  end
end
